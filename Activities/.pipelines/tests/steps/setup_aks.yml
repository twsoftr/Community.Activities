parameters:
  - name: azureServiceConnectionName
    type: string
  - name: aksResourcePrefix
    type: string
  - name: sftpContainer
    type: string
  - name: sqlserverContainer
    type: string

steps:
  - task: AzureCLI@2
    displayName: Setup the API server authorized IP ranges
    name: k8s_api_access
    inputs:
      azureSubscription: $(azureServiceConnectionName)
      scriptType: pscore
      scriptLocation: inlineScript
      addSpnToEnvironment: true
      inlineScript: |
       $ip=Invoke-RestMethod http://ipinfo.io/json | Select -exp ip
       $ip = $ip+"/23"
       write-host $ip
       az aks update -g $(aksResourcePrefix)-rg -n $(aksResourcePrefix)-aks --api-server-authorized-ip-ranges  $ip

  - task: AzureCLI@2
    displayName: Setup the K8S credentials
    name: k8s_credentials
    inputs:
      azureSubscription: $(azureServiceConnectionName)
      scriptType: pscore
      scriptLocation: inlineScript
      addSpnToEnvironment: true
      inlineScript: |
        az aks get-credentials -g $(aksResourcePrefix)-rg -n $(aksResourcePrefix)-aks

  

  - task: PowerShell@2
    displayName: generate uniq namespace
    inputs:
      targetType: 'inline'
      script: |
        $namespace = -join ((48..57) + (97..122) | Get-Random -Count 25 | % {[char]$_})        
        kubectl create namespace $namespace
        Write-Host "##vso[task.setvariable variable=namespace;]$namespace" 

  - script: |
        kubectl apply -f $(Build.SourcesDirectory)/Activities/.pipelines/tests/kube/$(sqlserverContainer).yml --namespace=$(namespace)
 #       kubectl apply -f $(Build.SourcesDirectory)/Activities/.pipelines/tests/kube/$(sftpContainer).yml --namespace=$(namespace)
    displayName: kube deploy $(kubeContainer)

#  - task: PowerShell@2
#    displayName: get ip $(sftpContainer)
#    inputs:
#      targetType: 'inline'
#      script: |
#        Start-Sleep -s 30
#        $ip=((kubectl describe service $(sftpContainer) --namespace=$(namespace)|Select-string "LoadBalancer Ingress").ToString()|Select-String -Pattern "\d{1,3}(\.\d{1,3}){3}" -AllMatches).Matches.Value
#        Write-Host "##vso[task.setvariable variable=sftpPublicIP;]$ip" 
#
  - task: PowerShell@2
    displayName: get ip $(sqlserverContainer)
    inputs:
      targetType: 'inline'
      script: |
        Start-Sleep -s 30
        $ip=((kubectl describe service $(sqlserverContainer) --namespace=$(namespace)|Select-string "LoadBalancer Ingress").ToString()|Select-String -Pattern "\d{1,3}(\.\d{1,3}){3}" -AllMatches).Matches.Value
        Write-Host "##vso[task.setvariable variable=sqlPublicIP;]$ip" 