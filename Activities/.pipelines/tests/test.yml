
parameters:
  azureServiceConnectionName: "AzureDevTest-EA"
  aksResourcePrefix: "dvts-ts-ta-we"
  kubeContainer: "sftpserver-deployment"

jobs:
- job: Run_Database_Integration_Tests
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: AzureCLI@2
    displayName: Setup the K8S credentials
    name: k8s_credentials
    inputs:
      azureSubscription: $(azureServiceConnectionName)
      scriptType: pscore
      scriptLocation: inlineScript
      addSpnToEnvironment: true
      inlineScript: |
        az aks get-credentials -g $(aksResourcePrefix)-rg -n $(aksResourcePrefix)-aks

  - task: PowerShell@2
    displayName: generate uniq namespace
    inputs:
      targetType: 'inline'
      script: |
        $namespace = -join ((48..57) + (97..122) | Get-Random -Count 25 | % {[char]$_})        
        kubectl create namespace $namespace
        Write-Host "##vso[task.setvariable variable=namespace;]$namespace" 

  - script: |
        kubectl apply -f $(Build.SourcesDirectory)/Activities/.pipelines/tests/kube/$(kubeContainer).yml --namespace=$(namespace)
    displayName: kube deploy $(kubeContainer)

  - task: PowerShell@2
    displayName: get ip
    inputs:
      targetType: 'inline'
      script: |
        Start-Sleep -s 30
        $ip=((kubectl describe service $(kubeContainer) --namespace=$(namespace)|Select-string "LoadBalancer Ingress").ToString()|Select-String -Pattern "\d{1,3}(\.\d{1,3}){3}" -AllMatches).Matches.Value
        Write-Host "##vso[task.setvariable variable=sqlPublicIP;]$ip" 

  - script: |
        echo $(sqlPublicIP)
        echo test
    displayName: test $(kubeContainer)
    condition: always()

  - script: |
        kubectl delete -f $(Build.SourcesDirectory)/Activities/.pipelines/tests/kube/$(kubeContainer).yml --namespace=$(namespace)
        kubectl delete namespace $(namespace)
    displayName: clean - kube delete $(kubeContainer)
    condition: always()